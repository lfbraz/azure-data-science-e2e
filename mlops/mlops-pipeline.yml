# trigger:
# - main

pool:
  vmImage: 'ubuntu-latest'

stages:

- stage: train_model
  displayName: Train
  jobs:
  - job: train
    displayName: Model Train
    steps:
    - task: UsePythonVersion@0
      displayName: Use Python 3.7.*
      inputs:
        versionSpec: 3.7.*
    - task: riserrad.azdo-databricks.azdo-databricks-configuredatabricks.configuredatabricks@0
      displayName: 'Configure Databricks Cluster'
      inputs:
        url: $(databricks-url)
        token: $(databricks-token)
    - task: riserrad.azdo-databricks.azdo-databricks-executenotebook.executenotebook@0
      displayName: Train
      inputs:
        notebookPath: /Repos/lubraz@microsoft.com/azure-data-science-e2e/mlops/src/train
        existingClusterId: $(databricks-cluster-id)
    - task: riserrad.azdo-databricks.azdo-databricks-waitexecution.waitexecution@0
      displayName: 'Wait for Training notebook'

- stage: register_model
  displayName: Model Register
  jobs:
  - job: register
    displayName: Model Register
    steps:
    - task: UsePythonVersion@0
      displayName: Use Python 3.7.*
      inputs:
        versionSpec: 3.7.*
    - task: riserrad.azdo-databricks.azdo-databricks-configuredatabricks.configuredatabricks@0
      displayName: 'Configure Databricks Cluster'
      inputs:
        url: $(databricks-url)
        token: $(databricks-token)
    - task: riserrad.azdo-databricks.azdo-databricks-executenotebook.executenotebook@0
      displayName: Register
      inputs:
        notebookPath: /Repos/lubraz@microsoft.com/azure-data-science-e2e/mlops/src/register
        existingClusterId: $(databricks-cluster-id)
    - task: riserrad.azdo-databricks.azdo-databricks-waitexecution.waitexecution@0
      displayName: 'Wait for Training notebook'

